<div class="block head-data-list">
  <div class="fix-block-head"></div>
  <%= render 'relax_admin/shared/better_paginate' %>
  <%= render 'relax_admin/shared/batch_actions' %>
</div>

<form name="order" id="order" method="GET">
  <input type="hidden" name="order_field" value="<%= params[:order_field] %>"/>
  <input type="hidden" name="order" value="<%= params[:order] %>"/>
</form>

<%= form_for :filters, url: '', method: 'GET', html: {id: 'filters'} do |form| %>
  <table class="table table-striped table-bordered table-hover table-data-list">
    <thead>
    <tr role="row" class="heading">
      <th>
        <input type="checkbox" class="toggle-all"/>
      </th>
      <th
      data-order-field="id"
      <% if params[:order_field].to_s == 'id' %>
      class="ordered <%= params[:order].downcase %>"
      data-order="<%= params[:order] %>"
      <% else %>
      class="ordered"
      <% end %>
      >#
      </th>
      <% list_params.each do |attr| %>
        <% if attr.is_a?(Hash) %>
          <th><%= @model_class.human_attribute_name(attr.keys.first) %></th>
        <% else %>
          <th
          <% if orderable?(@model_class, attr) %>
          data-order-field="<%= attr %>"
          <% if params[:order_field].to_s == attr.to_s %>
          class="ordered <%= params[:order].downcase %>"
          data-order="<%= params[:order] %>"
          <% else %>
          class="ordered"
          <% end %>
          <% end %>>
            <%= @model_class.human_attribute_name(attr) %>
          </th>
        <% end %>
      <% end %>
      <th class="text-center"><%= t('relax_admin.view.actions') %></th>
    </tr>

      <%= render 'filters', model: @model_class %>
    </thead>

    <tbody>
    <% @models.each do |m| %>
      <tr>
        <td class="fit"><input type="checkbox" name="<%= @model_name.pluralize.downcase %>[] %>" value="<%= m.id %>"></td>
        <td class="fit"><%= m.id %></td>
        <% list_params.each do |attr| %>
          <% if attr.is_a?(Hash) %>
            <% if attr[attr.keys.first][:type] == 'image' %>
              <td class="text-center">
                <% if m.send(attr.keys.first).present? %>
                  <img src="<%= m.send(attr.keys.first) %>" class="img-fluid"/>
                <% else %>
                  <em><%= t() %></em>
                <% end %>
              </td>
            <% end %>
          <% else %>
            <% if m.send(attr).is_a?(TrueClass) || m.send(attr).is_a?(FalseClass) %>
              <td class="text-center">
                <span class="tag tag-<%= m.send(attr) ? 'sucess' : 'danger' %> tag-boolean"><%= m.send(attr) ? 'Oui' : 'Non' %></span>
              </td>
            <% elsif @belongs_to_fields.include?(attr) || @has_one_fields.include?(attr) %>
              <td>
                <%= show_object(m.send(attr)) %>
              </td>
            <% else %>
              <td>
                <%= m.send(attr) %>
              </td>
            <% end %>
          <% end %>
        <% end %>
        <td class="actions fit">
          <div class="btn-group">
            <% if can? :show, @model_class %>
              <%= link_to(polymorphic_url([:relax_admin, m]), class: 'btn btn-primary btn-sm') do %>
                <i class="icon-magnifier"></i>
              <% end rescue nil %>
            <% end %>
            <% if can? :edit, @model_class %>
              <%= link_to(edit_polymorphic_url([:relax_admin, m]), class: 'btn btn-warning btn-sm') do %>
                <i class="icon-note"></i>
              <% end rescue nil %>
            <% end %>
            <% if can? :destroy, @model_class %>
              <%= link_to(polymorphic_url([:relax_admin, m]), class: 'single-delete btn btn-danger btn-sm') do %>
                <i class="icon-trash"></i>
              <% end rescue nil %>
            <% end %>
          </div>
        </td>
      </tr>
    <% end %>
    </tbody>
  </table>
<% end %>

<%= render 'relax_admin/shared/better_paginate' %>

<script type="text/javascript">
  $(document).on('turbolinks:load', function() {
    $('.bootstrap-datepicker').datepicker({
      language: 'fr',
      format: 'yyyy/mm/dd',
      templates: {
        leftArrow: '<i class="icon-arrow-left"></i>',
        rightArrow: '<i class="icon-arrow-right"></i>'
      }
    });

    // handle Sort
    $('.ordered').on('click', function() {
      var field = $(this).data('order-field');

      if (field) {
        var order_direction = $(this).data('order');
        if (!order_direction) {
          order_direction = 'DESC';
        } else {
          order_direction = toggle_order(order_direction);
        }
        handle_form(field, order_direction);

        // change order field should reset pagination
        $('.admin-pagination input').val(1);
        $('.admin-pagination option:first').prop('selected',true);
        handleFiltersAndLocation();
      }
    });

    function toggle_order(order_direction) {
      return order_direction == 'DESC' ? 'ASC' : 'DESC';
    }

    function handle_form(field, order_direction) {
      $('input[name="order_field"]').val(field);
      $('input[name="order"]').val(order_direction);
    }

    // Pagination
    var delimiter = false;

    // Only integer in text field for page number
    $('.integer').keypress(function (e) {
      var a = [];
      var k = e.which;
      var val = $(this).val();

      for (i = 48; i < 58; i++)
        a.push(i);

      if (!(a.indexOf(k) >= 0)) {
        e.preventDefault();
      }
    });


    // Select range value per
    $('select[name="per"]').on('change', function () {
      $('input[name="page"]').val(1);
    });

    $('.prev-page, .next-page').on('click', function (e) {
      e.preventDefault();
      var disabled = $(this).attr('disabled');
      if (!disabled) {
        var page = parseInt(<%= params[:page] %>);
        if ($(this).hasClass('prev-page')) {
          page--;
        } else {
          page++;
        }
        $('.admin-pagination').find('input[name="page"]').val(page).change();
      }
    });

    $('.admin-pagination').on('change', function () {
      if (!delimiter) {
        delimiter = true;
        var last_page = parseInt(<%= @models.total_pages %>);
        var val = $(this).find('input[name="page"]').val();

        if (val > 0 && val <= last_page) {
          handleFiltersAndLocation();
        }
      }
    });

    $('#reset-filters').on('click', function(e) {
      e.preventDefault();

      $("input[name*='filters']").val('');
      $("select[name*='filters'] option:first").prop('selected',true);

      $('#filters').trigger('submit');
    });


    // Handle Both form
    function handleFiltersAndLocation() {
      var url = window.location.href.split("?")[0];

      var filtersParams = $('#filters').serialize();
      var paginationParams = $('.admin-pagination').first().serialize();
      var orderParams = $('#order').serialize();

      parameters = '';
      $.each([filtersParams, paginationParams, orderParams], function(index, params) {
        if (index != 0) {
          parameters += '&' + params;
        } else {
          parameters += params;
        }
      });

      window.location.href = url + '?' + parameters;
    }
  });
</script>
